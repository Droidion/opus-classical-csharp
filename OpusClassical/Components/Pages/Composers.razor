@page "/"
@using OpusClassical.Models
@using OpusClassical.Repositories
@inject NavigationManager Navigation
@inject IPeriodRepository PeriodRepo
@inject IComposerRepository ComposerRepo
@inject ILogger<Composers> Logger

<div>
    <h1>Composers</h1>
    @foreach (var periodWithComposers in PeriodsWithComposers)
    {
        <PeriodHeader Period="periodWithComposers.Period"/>
        <hr/>
        <div class="mb-4 flex flex-wrap">
            @foreach (var composer in periodWithComposers.Composers)
            {
                <ComposerCard Composer="@composer"/>
            }
        </div>
    }
</div>

@code {

    private record PeriodWithComposers(Period Period, IEnumerable<Composer> Composers);

    private IEnumerable<Period> _periods = [];
    private IEnumerable<Composer> _composers = [];

    private IEnumerable<PeriodWithComposers> PeriodsWithComposers => _periods.Select(period =>
        new PeriodWithComposers(
            period,
            _composers.Where(c => c.PeriodId == period.Id).OrderBy(c => c.LastName)
        )
    );

    private async Task LoadData()
    {
        try
        {
            _periods = await PeriodRepo.GetAllPeriods();
            _composers = await ComposerRepo.GetAllComposers();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading data for composers page");
            Navigation.NavigateTo("/error");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

}