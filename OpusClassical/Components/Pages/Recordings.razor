@inject WorkRepository WorkRepo
@inject ComposerRepository ComposerRepo
@inject RecordingRepository RecordingRepo
@inject PerformerRepository PerformerRepo
@inject LinkRepository LinkRepo
@inject EnvironmentConfig Env

@page "/composer/{ComposerSlug}/work/{WorkId}"
@using OpusClassical.Helpers
@using OpusClassical.Models
@using OpusClassical.Repositories

<div>
    <h1>
        <span>@HelperFunctions.FormatWorkName(_pageData?.Work.Title, _pageData?.Work.No, _pageData?.Work.Nickname)</span>
    </h1>
    <div class="mb-4 w-full text-center">
        <a href="/composer/@_pageData?.Composer.Slug">
            @_pageData?.Composer.FirstName&nbsp;@_pageData?.Composer.LastName
        </a>
        @if (_pageData?.Work.YearStart is not null || _pageData?.Work.YearFinish is not null)
        {
            <span>, @HelperFunctions.FormatYearsRangeString(_pageData?.Work.YearStart, _pageData?.Work.YearFinish)</span>
        }
    </div>
    <h2>Recommended Recordings</h2>
    <hr/>
</div>

@code {

    record RecData(Recording Recording, IEnumerable<Performer> Performers, IEnumerable<Link> Links);

    record PageData(Work Work, Composer Composer, string ImagesUrl, IEnumerable<RecData> Recordings);

    [Parameter] public string? ComposerSlug { get; set; }
    [Parameter] public string? WorkId { get; set; }

    private PageData? _pageData;

    protected override async Task OnInitializedAsync()
    {
        if (ComposerSlug is null) return;
        var work = await WorkRepo.GetWorkById(Convert.ToInt32(WorkId));
        var composer = await ComposerRepo.GetComposerBySlug(ComposerSlug);
        if (work is null || composer is null) return;
        var recordings = await RecordingRepo.GetRecordingsByWork(work.Id);
        var recordingsIds = recordings.Select(r => r.Id);
        var performers = await PerformerRepo.GetPerformersByRecordings(recordingsIds);
        var links = await LinkRepo.GetLinksByRecordings(recordingsIds);
        var recData = recordings.Select(r =>
            new RecData(r, performers.Where(p => p.RecordingId == r.Id), links.Where(l => l.RecordingId == r.Id))
        );
        _pageData = new PageData(
            work,
            composer,
            Env.ImagesUrl,
            recData
        );
    }


}