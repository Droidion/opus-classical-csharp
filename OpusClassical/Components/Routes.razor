@using OpusClassical.Components.Layout
@using OpusClassical.Services
@inject ColorThemeService ColorThemeService

@rendermode InteractiveServer

<Router AppAssembly="typeof(Program).Assembly">
    <Found Context="routeData">
        <div class="@ThemeClass text-mineshaft dark:bg-codgray bg-white dark:text-white/80">
            <RouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)"/>
        </div>
    </Found>
</Router>


@code {

    private string? ThemeClass => ColorThemeService.IsDarkTheme ? "dark" : null;

    protected override void OnInitialized()
    {
        ColorThemeService.OnThemeChanged += OnThemeChanged;
    }

    private void OnThemeChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ColorThemeService.OnThemeChanged -= OnThemeChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ColorThemeService.RestoreChosenTheme();
        }
    }

}